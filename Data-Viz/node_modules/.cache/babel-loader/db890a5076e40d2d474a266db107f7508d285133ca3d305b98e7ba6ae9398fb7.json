{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\stinger-delay\\\\Data-Viz\\\\src\\\\features\\\\routeView\\\\RouteViewPage.tsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import styles from \"./RouteViewPage.module.css\";\n// import { Link } from \"react-router-dom\";\n\n// const RouteViewPage: React.FC = () => {\n//   return (\n//     <div style={{ padding: \"2rem\", textAlign: \"center\" }}>\n//       <h1>Route View Page</h1>\n//       <p>This is a placeholder for the Route View Page.</p>\n//       <Link to=\"/\" className={styles.linkButton}>\n//         Return Home\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default RouteViewPage;\n\n// src/features/routeView/RouteViewPage.tsx\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./RouteViewPage.module.css\";\n// import { mockRoutes } from \"@/lib/mocks/mockTripData\";\nimport { mockRoutes } from \"../../lib/mocks/mockTripData\";\nimport StopList from \"./components/StopList\";\nimport RouteMap from \"./components/RouteMap\";\nimport ETAInfo from \"./components/ETAInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouteViewPage = () => {\n  _s();\n  const [routes, setRoutes] = useState([]);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [selectedStop, setSelectedStop] = useState(null);\n  useEffect(() => {\n    // TODO: fetch real routes from API\n    setRoutes(mockRoutes);\n  }, []);\n  useEffect(() => {\n    if (selectedRoute) {\n      // optionally fetch busLocations & delayPredictions for selectedRoute\n    }\n  }, [selectedRoute]);\n  const handleRouteSelect = routeId => {\n    const route = routes.find(r => r.id === routeId) || null;\n    setSelectedRoute(route);\n    setSelectedStop(null);\n  };\n  const handleStopSelect = stop => {\n    setSelectedStop(stop);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Route View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleRouteSelect(e.target.value),\n      value: (selectedRoute === null || selectedRoute === void 0 ? void 0 : selectedRoute.id) || \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), routes.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: r.id,\n        children: r.name\n      }, r.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), selectedRoute && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.detailSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.listSection,\n        children: /*#__PURE__*/_jsxDEV(StopList, {\n          stops: selectedRoute.stops,\n          selectedStopId: selectedStop === null || selectedStop === void 0 ? void 0 : selectedStop.id,\n          onSelectStop: handleStopSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mapSection,\n        children: /*#__PURE__*/_jsxDEV(RouteMap, {\n          stops: selectedRoute.stops,\n          busLocations: selectedRoute.busLocations,\n          pathCoordinates: selectedRoute.pathGeoJson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.infoSection,\n        children: /*#__PURE__*/_jsxDEV(ETAInfo, {\n          predictions: selectedRoute.delayPredictions || [],\n          selectedStopId: selectedStop === null || selectedStop === void 0 ? void 0 : selectedStop.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteViewPage, \"hHYydUFw+OcY8Em+hoAKzTWi+U8=\");\n_c = RouteViewPage;\nexport default RouteViewPage;\nvar _c;\n$RefreshReg$(_c, \"RouteViewPage\");","map":{"version":3,"names":["React","useState","useEffect","styles","mockRoutes","StopList","RouteMap","ETAInfo","jsxDEV","_jsxDEV","RouteViewPage","_s","routes","setRoutes","selectedRoute","setSelectedRoute","selectedStop","setSelectedStop","handleRouteSelect","routeId","route","find","r","id","handleStopSelect","stop","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","name","detailSection","listSection","stops","selectedStopId","onSelectStop","mapSection","busLocations","pathCoordinates","pathGeoJson","infoSection","predictions","delayPredictions","_c","$RefreshReg$"],"sources":["C:/Users/Owner/stinger-delay/Data-Viz/src/features/routeView/RouteViewPage.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import styles from \"./RouteViewPage.module.css\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const RouteViewPage: React.FC = () => {\r\n//   return (\r\n//     <div style={{ padding: \"2rem\", textAlign: \"center\" }}>\r\n//       <h1>Route View Page</h1>\r\n//       <p>This is a placeholder for the Route View Page.</p>\r\n//       <Link to=\"/\" className={styles.linkButton}>\r\n//         Return Home\r\n//       </Link>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RouteViewPage;\r\n\r\n// src/features/routeView/RouteViewPage.tsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styles from \"./RouteViewPage.module.css\";\r\nimport { Route } from \"@/types/route\";\r\nimport { Stop } from \"@/types/stop\";\r\nimport { DelayPrediction, LiveBusLocation } from \"@/types/delay\";\r\n// import { mockRoutes } from \"@/lib/mocks/mockTripData\";\r\nimport { mockRoutes } from \"../../lib/mocks/mockTripData\";\r\nimport StopList from \"./components/StopList\";\r\nimport RouteMap from \"./components/RouteMap\";\r\nimport ETAInfo from \"./components/ETAInfo\";\r\n\r\nconst RouteViewPage: React.FC = () => {\r\n  const [routes, setRoutes] = useState<Route[]>([]);\r\n  const [selectedRoute, setSelectedRoute] = useState<Route | null>(null);\r\n  const [selectedStop, setSelectedStop] = useState<Stop | null>(null);\r\n\r\n  useEffect(() => {\r\n    // TODO: fetch real routes from API\r\n    setRoutes(mockRoutes);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedRoute) {\r\n      // optionally fetch busLocations & delayPredictions for selectedRoute\r\n    }\r\n  }, [selectedRoute]);\r\n\r\n  const handleRouteSelect = (routeId: string) => {\r\n    const route = routes.find((r) => r.id === routeId) || null;\r\n    setSelectedRoute(route);\r\n    setSelectedStop(null);\r\n  };\r\n\r\n  const handleStopSelect = (stop: Stop) => {\r\n    setSelectedStop(stop);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Route View</h1>\r\n      <select\r\n        onChange={(e) => handleRouteSelect(e.target.value)}\r\n        value={selectedRoute?.id || \"\"}\r\n      >\r\n        <option value=\"\">Select a route</option>\r\n        {routes.map((r) => (\r\n          <option key={r.id} value={r.id}>\r\n            {r.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedRoute && (\r\n        <div className={styles.detailSection}>\r\n          <div className={styles.listSection}>\r\n            <StopList\r\n              stops={selectedRoute.stops}\r\n              selectedStopId={selectedStop?.id}\r\n              onSelectStop={handleStopSelect}\r\n            />\r\n          </div>\r\n          <div className={styles.mapSection}>\r\n            <RouteMap\r\n              stops={selectedRoute.stops}\r\n              busLocations={selectedRoute.busLocations}\r\n              pathCoordinates={selectedRoute.pathGeoJson}\r\n            />\r\n          </div>\r\n          <div className={styles.infoSection}>\r\n            <ETAInfo\r\n              predictions={selectedRoute.delayPredictions || []}\r\n              selectedStopId={selectedStop?.id}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouteViewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}