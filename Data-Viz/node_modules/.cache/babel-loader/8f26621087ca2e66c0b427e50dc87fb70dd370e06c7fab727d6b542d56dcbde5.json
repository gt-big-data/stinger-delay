{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\stinger-delay\\\\Data-Viz\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./Home.css\";\n\n// const Home: React.FC = () => {\n//   // Need more routes and stops\n//   const busRoutes = {\n//     Gold: [\n//       \"Marta Midtown Station\",\n//       \"Tech Square WB\",\n//       \"5th Street Bridge WB\",\n//       \"Russ Chandler Stadium\",\n//       \"Klaus Building WB\",\n//       \"Nanotechnology\",\n//       \"Kendeda Building\",\n//       \"Couch Park\",\n//       \"CRC & Stamps Health\",\n//       \"Ferst Drive & Campus Center\",\n//       \"Transit Hub\",\n//       \"Campus Center\",\n//       \"Exhibition Hall\",\n//       \"Ferst Dr & Hemphill Ave\",\n//       \"Cherry Emerson\",\n//       \"5th Street Bridge EB\",\n//       \"Tech Square EB\",\n//       \"College of Business\",\n//       \"Academic of Medicine\",\n//     ],\n//     Red: [\n//       \"North Avenue Apts\",\n//       \"Tech Tower\",\n//       \"Transit Hub & Weber Building\",\n//       \"Campus Center\",\n//       \"Exhibition Hall\",\n//       \"Fitten Hall\",\n//       \"West Village\",\n//       \"8th St & Hemphill Ave\",\n//       \"Ferst Dr & Hemphill Ave\",\n//       \"Cherry Emerson\",\n//       \"Klaus Building EB\",\n//     ],\n//     Blue: [\n//       \"Paper Tricentennial\",\n//       \"West Village\",\n//       \"8th St & Hemphill Ave\",\n//       \"Couch Park\",\n//       \"CRC & Stamps Health\",\n//       \"Ferst Drive & Campus Center\",\n//       \"Transit Hub & Tech Parkway\",\n//       \"Ferst Dr & Cherry St\",\n//       \"North Avenue Apts\",\n//       \"Brown Residence Hall\",\n//     ],\n//     Green: [\n//       \"575 14th Street\",\n//       \"14th St & State St\",\n//       \"GTRI Conference Center\",\n//       \"10th and Fowler\",\n//       \"Graduate Living Center\",\n//       \"Baker Building\",\n//       \"Kendeda Building\",\n//       \"Couch Park\",\n//       \"CRC & Stamps Health\",\n//       \"Ferst Drive & Campus Center\",\n//       \"Transit Hub\",\n//       \"Campus Center\",\n//       \"Exhibition Hall\",\n//     ],\n//     Clough: [\n//       \"Clough Commons\",\n//       \"5th Street Bridge EB\",\n//       \"Tech Square EB\",\n//       \"Spring St @ 4th St\",\n//       \"West Peachtree @ 4th St\",\n//       \"Tech Square WB\",\n//       \"Techwood & 5th SW Corner\",\n//     ],\n//   };\n\n//   const [selectedRoute, setSelectedRoute] = useState<string | null>(null);\n//   const [selectedStop, setSelectedStop] = useState<string | null>(null);\n//   const [imageSrc, setImageSrc] = useState<string | null>(null);\n\n//   const getImagePath = () => {\n//     if (selectedRoute) {\n//       const route = selectedRoute.replace(/\\s+/g, \"\");\n//       return `/data/${route}.png`; // Adjust the path based on your directory structure\n//     }\n//     return null;\n//   };\n\n//   const handleImageError = () => {\n//     setImageSrc(\"/data/default.png\"); // Set the default image on error\n//   };\n\n//   const handleRouteChange = (route: string) => {\n//     setSelectedRoute(route);\n//     setSelectedStop(null);\n//     setImageSrc(getImagePath()); // Update the image source when the route changes\n//   };\n\n//   return (\n//     <div className=\"page\">\n//       {/* Top Left Text */}\n//       <div className=\"top-left-text\">GT Stinger Delay</div>\n\n//       {/* Title Section */}\n//       <div className=\"title-container\">\n//         <div className=\"title-text\">\n//           Georgia Tech Stinger Shuttle Delay Visualizer\n//         </div>\n//       </div>\n\n//       {/* Description */}\n//       <p\n//         style={{\n//           fontSize: \"18px\",\n//           color: \"lightgray\",\n//           marginBottom: \"30px\",\n//           marginTop: \"30px\",\n//         }}\n//       >\n//         A Georgia Tech's Big Data Big Impact project.\n//       </p>\n\n//       {/* Dropdown for Routes */}\n//       <div className=\"dropdown-container\">\n//         <label htmlFor=\"route-select\" className=\"dropdown-label\">\n//           Choose your bus line\n//         </label>\n//         <select\n//           id=\"route-select\"\n//           onChange={(e) => {\n//             setSelectedRoute(e.target.value);\n//             setSelectedStop(null);\n//           }}\n//           value={selectedRoute || \"\"}\n//           style={{ marginTop: \"10px\", fontSize: \"16px\", width: \"100%\" }}\n//         >\n//           <option value=\"\" disabled>\n//             Select a route\n//           </option>\n//           {Object.keys(busRoutes).map((route) => (\n//             <option key={route} value={route}>\n//               {route}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n\n//       {/* Dropdown for Stops */}\n//       {selectedRoute && (\n//         <div className=\"dropdown-container\">\n//           <label htmlFor=\"stop-select\" className=\"dropdown-label\">\n//             Current stop\n//           </label>\n//           <select\n//             id=\"stop-select\"\n//             onChange={(e) => setSelectedStop(e.target.value)}\n//             value={selectedStop || \"\"}\n//             style={{ marginTop: \"10px\", fontSize: \"16px\", width: \"100%\" }}\n//           >\n//             <option value=\"\" disabled>\n//               Select a stop\n//             </option>\n//             {busRoutes[selectedRoute as keyof typeof busRoutes].map((stop) => (\n//               <option key={stop} value={stop}>\n//                 {stop}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//       )}\n\n//       {/* Map Placeholder */}\n//       {selectedRoute && selectedStop && (\n//         <div style={{ marginTop: \"30px\" }}>\n//           <p>\n//             Displaying map for <strong>{selectedRoute}</strong> at{\" \"}\n//             <strong>{selectedStop}</strong>.\n//           </p>\n//           <div className=\"map-placeholder\">\n//             <img\n//               src={imageSrc || getImagePath() || \"\"}\n//               alt={`${selectedRoute} route`}\n//               style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\n//               onError={handleImageError}\n//             />\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const busRoutes = {\n    Gold: [\"Marta Midtown Station\", \"Tech Square WB\", \"5th Street Bridge WB\"],\n    Red: [\"North Avenue Apts\", \"Tech Tower\", \"Transit Hub & Weber Building\"],\n    Blue: [\"Paper Tricentennial\", \"West Village\", \"8th St & Hemphill Ave\"],\n    Green: [\"575 14th Street\", \"14th St & State St\", \"GTRI Conference Center\"],\n    Clough: [\"Clough Commons\", \"5th Street Bridge EB\", \"Tech Square EB\"]\n  };\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const [imageSrc, setImageSrc] = useState(\"/data/default.png\"); // Set default image initially\n\n  const getImagePath = () => {\n    if (selectedRoute) {\n      const route = selectedRoute.replace(/\\s+/g, \"\").toLowerCase();\n      return `/data/${route}.png`; // Adjust the path based on your directory structure\n    }\n    return null;\n  };\n  const handleImageError = () => {\n    setImageSrc(\"/data/default.png\"); // Set the default image on error\n  };\n  const handleRouteChange = route => {\n    setSelectedRoute(route);\n    setSelectedStop(null);\n    setImageSrc(getImagePath()); // Update the image source when the route changes\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-left-text\",\n      children: \"GT Stinger Delay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-text\",\n        children: \"Georgia Tech Stinger Shuttle Delay Visualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"18px\",\n        color: \"lightgray\",\n        marginBottom: \"30px\",\n        marginTop: \"30px\"\n      },\n      children: \"A Georgia Tech's Big Data Big Impact project.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"route-select\",\n        className: \"dropdown-label\",\n        children: \"Choose your bus line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"route-select\",\n        onChange: e => handleRouteChange(e.target.value),\n        value: selectedRoute || \"\",\n        style: {\n          marginTop: \"10px\",\n          fontSize: \"16px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), Object.keys(busRoutes).map(route => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: route,\n          children: route\n        }, route, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), selectedRoute && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stop-select\",\n        className: \"dropdown-label\",\n        children: \"Current stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"stop-select\",\n        onChange: e => setSelectedStop(e.target.value),\n        value: selectedStop || \"\",\n        style: {\n          marginTop: \"10px\",\n          fontSize: \"16px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), busRoutes[selectedRoute].map(stop => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: stop,\n          children: stop\n        }, stop, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Displaying map for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedRoute || \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 30\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageSrc || \"\",\n          alt: \"Default route\",\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\"\n          },\n          onError: handleImageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"mZqUoA2X6K7CZls/3n8QkXxOMkM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","busRoutes","Gold","Red","Blue","Green","Clough","selectedRoute","setSelectedRoute","selectedStop","setSelectedStop","imageSrc","setImageSrc","getImagePath","route","replace","toLowerCase","handleImageError","handleRouteChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","color","marginBottom","marginTop","htmlFor","id","onChange","e","target","value","width","disabled","Object","keys","map","stop","src","alt","height","objectFit","onError","_c","$RefreshReg$"],"sources":["C:/Users/Owner/stinger-delay/Data-Viz/src/pages/Home.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useState } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"./Home.css\";\r\n\r\n// const Home: React.FC = () => {\r\n//   // Need more routes and stops\r\n//   const busRoutes = {\r\n//     Gold: [\r\n//       \"Marta Midtown Station\",\r\n//       \"Tech Square WB\",\r\n//       \"5th Street Bridge WB\",\r\n//       \"Russ Chandler Stadium\",\r\n//       \"Klaus Building WB\",\r\n//       \"Nanotechnology\",\r\n//       \"Kendeda Building\",\r\n//       \"Couch Park\",\r\n//       \"CRC & Stamps Health\",\r\n//       \"Ferst Drive & Campus Center\",\r\n//       \"Transit Hub\",\r\n//       \"Campus Center\",\r\n//       \"Exhibition Hall\",\r\n//       \"Ferst Dr & Hemphill Ave\",\r\n//       \"Cherry Emerson\",\r\n//       \"5th Street Bridge EB\",\r\n//       \"Tech Square EB\",\r\n//       \"College of Business\",\r\n//       \"Academic of Medicine\",\r\n//     ],\r\n//     Red: [\r\n//       \"North Avenue Apts\",\r\n//       \"Tech Tower\",\r\n//       \"Transit Hub & Weber Building\",\r\n//       \"Campus Center\",\r\n//       \"Exhibition Hall\",\r\n//       \"Fitten Hall\",\r\n//       \"West Village\",\r\n//       \"8th St & Hemphill Ave\",\r\n//       \"Ferst Dr & Hemphill Ave\",\r\n//       \"Cherry Emerson\",\r\n//       \"Klaus Building EB\",\r\n//     ],\r\n//     Blue: [\r\n//       \"Paper Tricentennial\",\r\n//       \"West Village\",\r\n//       \"8th St & Hemphill Ave\",\r\n//       \"Couch Park\",\r\n//       \"CRC & Stamps Health\",\r\n//       \"Ferst Drive & Campus Center\",\r\n//       \"Transit Hub & Tech Parkway\",\r\n//       \"Ferst Dr & Cherry St\",\r\n//       \"North Avenue Apts\",\r\n//       \"Brown Residence Hall\",\r\n//     ],\r\n//     Green: [\r\n//       \"575 14th Street\",\r\n//       \"14th St & State St\",\r\n//       \"GTRI Conference Center\",\r\n//       \"10th and Fowler\",\r\n//       \"Graduate Living Center\",\r\n//       \"Baker Building\",\r\n//       \"Kendeda Building\",\r\n//       \"Couch Park\",\r\n//       \"CRC & Stamps Health\",\r\n//       \"Ferst Drive & Campus Center\",\r\n//       \"Transit Hub\",\r\n//       \"Campus Center\",\r\n//       \"Exhibition Hall\",\r\n//     ],\r\n//     Clough: [\r\n//       \"Clough Commons\",\r\n//       \"5th Street Bridge EB\",\r\n//       \"Tech Square EB\",\r\n//       \"Spring St @ 4th St\",\r\n//       \"West Peachtree @ 4th St\",\r\n//       \"Tech Square WB\",\r\n//       \"Techwood & 5th SW Corner\",\r\n//     ],\r\n//   };\r\n\r\n//   const [selectedRoute, setSelectedRoute] = useState<string | null>(null);\r\n//   const [selectedStop, setSelectedStop] = useState<string | null>(null);\r\n//   const [imageSrc, setImageSrc] = useState<string | null>(null);\r\n\r\n//   const getImagePath = () => {\r\n//     if (selectedRoute) {\r\n//       const route = selectedRoute.replace(/\\s+/g, \"\");\r\n//       return `/data/${route}.png`; // Adjust the path based on your directory structure\r\n//     }\r\n//     return null;\r\n//   };\r\n\r\n//   const handleImageError = () => {\r\n//     setImageSrc(\"/data/default.png\"); // Set the default image on error\r\n//   };\r\n\r\n//   const handleRouteChange = (route: string) => {\r\n//     setSelectedRoute(route);\r\n//     setSelectedStop(null);\r\n//     setImageSrc(getImagePath()); // Update the image source when the route changes\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"page\">\r\n//       {/* Top Left Text */}\r\n//       <div className=\"top-left-text\">GT Stinger Delay</div>\r\n\r\n//       {/* Title Section */}\r\n//       <div className=\"title-container\">\r\n//         <div className=\"title-text\">\r\n//           Georgia Tech Stinger Shuttle Delay Visualizer\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Description */}\r\n//       <p\r\n//         style={{\r\n//           fontSize: \"18px\",\r\n//           color: \"lightgray\",\r\n//           marginBottom: \"30px\",\r\n//           marginTop: \"30px\",\r\n//         }}\r\n//       >\r\n//         A Georgia Tech's Big Data Big Impact project.\r\n//       </p>\r\n\r\n//       {/* Dropdown for Routes */}\r\n//       <div className=\"dropdown-container\">\r\n//         <label htmlFor=\"route-select\" className=\"dropdown-label\">\r\n//           Choose your bus line\r\n//         </label>\r\n//         <select\r\n//           id=\"route-select\"\r\n//           onChange={(e) => {\r\n//             setSelectedRoute(e.target.value);\r\n//             setSelectedStop(null);\r\n//           }}\r\n//           value={selectedRoute || \"\"}\r\n//           style={{ marginTop: \"10px\", fontSize: \"16px\", width: \"100%\" }}\r\n//         >\r\n//           <option value=\"\" disabled>\r\n//             Select a route\r\n//           </option>\r\n//           {Object.keys(busRoutes).map((route) => (\r\n//             <option key={route} value={route}>\r\n//               {route}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n\r\n//       {/* Dropdown for Stops */}\r\n//       {selectedRoute && (\r\n//         <div className=\"dropdown-container\">\r\n//           <label htmlFor=\"stop-select\" className=\"dropdown-label\">\r\n//             Current stop\r\n//           </label>\r\n//           <select\r\n//             id=\"stop-select\"\r\n//             onChange={(e) => setSelectedStop(e.target.value)}\r\n//             value={selectedStop || \"\"}\r\n//             style={{ marginTop: \"10px\", fontSize: \"16px\", width: \"100%\" }}\r\n//           >\r\n//             <option value=\"\" disabled>\r\n//               Select a stop\r\n//             </option>\r\n//             {busRoutes[selectedRoute as keyof typeof busRoutes].map((stop) => (\r\n//               <option key={stop} value={stop}>\r\n//                 {stop}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Map Placeholder */}\r\n//       {selectedRoute && selectedStop && (\r\n//         <div style={{ marginTop: \"30px\" }}>\r\n//           <p>\r\n//             Displaying map for <strong>{selectedRoute}</strong> at{\" \"}\r\n//             <strong>{selectedStop}</strong>.\r\n//           </p>\r\n//           <div className=\"map-placeholder\">\r\n//             <img\r\n//               src={imageSrc || getImagePath() || \"\"}\r\n//               alt={`${selectedRoute} route`}\r\n//               style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n//               onError={handleImageError}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Home.css\";\r\n\r\nconst Home: React.FC = () => {\r\n  const busRoutes = {\r\n    Gold: [\"Marta Midtown Station\", \"Tech Square WB\", \"5th Street Bridge WB\"],\r\n    Red: [\"North Avenue Apts\", \"Tech Tower\", \"Transit Hub & Weber Building\"],\r\n    Blue: [\"Paper Tricentennial\", \"West Village\", \"8th St & Hemphill Ave\"],\r\n    Green: [\"575 14th Street\", \"14th St & State St\", \"GTRI Conference Center\"],\r\n    Clough: [\"Clough Commons\", \"5th Street Bridge EB\", \"Tech Square EB\"],\r\n  };\r\n\r\n  const [selectedRoute, setSelectedRoute] = useState<string | null>(null);\r\n  const [selectedStop, setSelectedStop] = useState<string | null>(null);\r\n  const [imageSrc, setImageSrc] = useState<string | null>(\"/data/default.png\"); // Set default image initially\r\n\r\n  const getImagePath = () => {\r\n    if (selectedRoute) {\r\n      const route = selectedRoute.replace(/\\s+/g, \"\").toLowerCase();\r\n      return `/data/${route}.png`; // Adjust the path based on your directory structure\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleImageError = () => {\r\n    setImageSrc(\"/data/default.png\"); // Set the default image on error\r\n  };\r\n\r\n  const handleRouteChange = (route: string) => {\r\n    setSelectedRoute(route);\r\n    setSelectedStop(null);\r\n    setImageSrc(getImagePath()); // Update the image source when the route changes\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {/* Top Left Text */}\r\n      <div className=\"top-left-text\">GT Stinger Delay</div>\r\n\r\n      {/* Title Section */}\r\n      <div className=\"title-container\">\r\n        <div className=\"title-text\">\r\n          Georgia Tech Stinger Shuttle Delay Visualizer\r\n        </div>\r\n      </div>\r\n\r\n      {/* Description */}\r\n      <p\r\n        style={{\r\n          fontSize: \"18px\",\r\n          color: \"lightgray\",\r\n          marginBottom: \"30px\",\r\n          marginTop: \"30px\",\r\n        }}\r\n      >\r\n        A Georgia Tech's Big Data Big Impact project.\r\n      </p>\r\n\r\n      {/* Dropdown for Routes */}\r\n      <div className=\"dropdown-container\">\r\n        <label htmlFor=\"route-select\" className=\"dropdown-label\">\r\n          Choose your bus line\r\n        </label>\r\n        <select\r\n          id=\"route-select\"\r\n          onChange={(e) => handleRouteChange(e.target.value)}\r\n          value={selectedRoute || \"\"}\r\n          style={{ marginTop: \"10px\", fontSize: \"16px\", width: \"100%\" }}\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a route\r\n          </option>\r\n          {Object.keys(busRoutes).map((route) => (\r\n            <option key={route} value={route}>\r\n              {route}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Dropdown for Stops */}\r\n      {selectedRoute && (\r\n        <div className=\"dropdown-container\">\r\n          <label htmlFor=\"stop-select\" className=\"dropdown-label\">\r\n            Current stop\r\n          </label>\r\n          <select\r\n            id=\"stop-select\"\r\n            onChange={(e) => setSelectedStop(e.target.value)}\r\n            value={selectedStop || \"\"}\r\n            style={{ marginTop: \"10px\", fontSize: \"16px\", width: \"100%\" }}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select a stop\r\n            </option>\r\n            {busRoutes[selectedRoute as keyof typeof busRoutes].map((stop) => (\r\n              <option key={stop} value={stop}>\r\n                {stop}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      {/* Route Image */}\r\n      <div style={{ marginTop: \"30px\" }}>\r\n        <p>\r\n          Displaying map for <strong>{selectedRoute || \"Default\"}</strong>.\r\n        </p>\r\n        <div className=\"map-placeholder\">\r\n          <img\r\n            src={imageSrc || \"\"}\r\n            alt=\"Default route\"\r\n            style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n            onError={handleImageError}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}