{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\stinger-delay\\\\Data-Viz\\\\src\\\\features\\\\routeView\\\\components\\\\RouteMap.tsx\";\n// import React from \"react\";\n// import {\n//   MapContainer,\n//   TileLayer,\n//   Polyline,\n//   Marker,\n//   Popup,\n// } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import { Stop } from \"@/types/stop\";\n// import { LiveBusLocation } from \"@/types/delay\";\n// import bus_icon_url from \"../../../assets/Bus.png\"; // rename to _url\n// import location_icon_url from \"../../../assets/Location.png\";\n// import markerIcon2x from \"leaflet/dist/images/marker-icon-2x.png\";\n// import markerIcon from \"leaflet/dist/images/marker-icon.png\";\n// import markerShadow from \"leaflet/dist/images/marker-shadow.png\";\n\n// delete (L.Icon.Default.prototype as any)._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconUrl: markerIcon,\n//   iconRetinaUrl: markerIcon2x,\n//   shadowUrl: markerShadow,\n// });\n\n// interface RouteMapProps {\n//   stops: Stop[];\n//   busLocations?: LiveBusLocation[];\n//   pathCoordinates?: [number, number][];\n// }\n\n// // Create the custom icons\n// const busIcon = L.icon({\n//   iconUrl: bus_icon_url,\n//   iconRetinaUrl: bus_icon_url,\n//   iconSize: [30, 30],\n//   iconAnchor: [15, 30],\n//   popupAnchor: [0, -30],\n// });\n\n// const locationIcon = L.icon({\n//   iconUrl: location_icon_url,\n//   iconRetinaUrl: location_icon_url,\n//   iconSize: [30, 30],\n//   iconAnchor: [15, 30],\n//   popupAnchor: [0, -30],\n// });\n\n// const RouteMap: React.FC<RouteMapProps> = ({\n//   stops,\n//   busLocations = [],\n//   pathCoordinates,\n// }) => {\n//   const center: [number, number] = stops.length\n//     ? [stops[0].latitude, stops[0].longitude]\n//     : [33.7756, -84.3963];\n\n//   return (\n//     <MapContainer\n//       center={center}\n//       zoom={15}\n//       style={{ height: \"500px\", width: \"100%\" }}\n//     >\n//       <TileLayer\n//         attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a>'\n//         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//       />\n//       {pathCoordinates && (\n//         <Polyline positions={pathCoordinates} color=\"#b3a369\" />\n//       )}\n//       {stops.map((stop) => (\n//         <Marker\n//           key={stop.id}\n//           position={[stop.latitude, stop.longitude]}\n//           icon={locationIcon}\n//         >\n//           <Popup>{stop.name}</Popup>\n//         </Marker>\n//       ))}\n//       {busLocations.map((bus) => (\n//         <Marker\n//           key={bus.busId}\n//           position={[bus.latitude, bus.longitude]}\n//           icon={busIcon}\n//         >\n//           <Popup>\n//             Bus {bus.busId} on Route {bus.routeId}\n//           </Popup>\n//         </Marker>\n//       ))}\n//     </MapContainer>\n//   );\n// };\n\n// export default RouteMap;\n\nimport React from \"react\";\nimport { MapContainer, TileLayer, Polyline, CircleMarker, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport bus_icon_url from \"../../../assets/Bus.png\";\n\n// Custom icon for buses\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busIcon = L.icon({\n  iconUrl: bus_icon_url,\n  iconRetinaUrl: bus_icon_url,\n  iconSize: [30, 30],\n  iconAnchor: [15, 30],\n  popupAnchor: [0, -30]\n});\nconst RouteMap = ({\n  stops,\n  busLocations = [],\n  pathCoordinates\n}) => {\n  const center = stops.length ? [stops[0].latitude, stops[0].longitude] : [33.7756, -84.3963];\n\n  // Change color for CircleMarker based on route\n  const stopColor = stopId => {\n    return stopId === \"Gold Route\" ? \"#b3a369\" : \"#FF0000\";\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 15,\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    scrollWheelZoom: true,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a>\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), pathCoordinates && /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: pathCoordinates,\n      color: \"#b3a369\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), stops.map(stop => /*#__PURE__*/_jsxDEV(CircleMarker, {\n      center: [stop.latitude, stop.longitude],\n      radius: 10,\n      fillColor: \"#fff\",\n      color: stopColor(stop.id),\n      fillOpacity: 0.8,\n      stroke: true,\n      weight: 3,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: stop.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, stop.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)), busLocations.map(bus => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [bus.latitude, bus.longitude],\n      icon: busIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Bus \", bus.busId, \" on Route \", bus.routeId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, bus.busId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_c = RouteMap;\nexport default RouteMap;\nvar _c;\n$RefreshReg$(_c, \"RouteMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Polyline","CircleMarker","Marker","Popup","L","bus_icon_url","jsxDEV","_jsxDEV","busIcon","icon","iconUrl","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","RouteMap","stops","busLocations","pathCoordinates","center","length","latitude","longitude","stopColor","stopId","zoom","style","height","width","scrollWheelZoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","positions","color","map","stop","radius","fillColor","id","fillOpacity","stroke","weight","name","bus","position","busId","routeId","_c","$RefreshReg$"],"sources":["C:/Users/Owner/stinger-delay/Data-Viz/src/features/routeView/components/RouteMap.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   MapContainer,\r\n//   TileLayer,\r\n//   Polyline,\r\n//   Marker,\r\n//   Popup,\r\n// } from \"react-leaflet\";\r\n// import L from \"leaflet\";\r\n// import \"leaflet/dist/leaflet.css\";\r\n// import { Stop } from \"@/types/stop\";\r\n// import { LiveBusLocation } from \"@/types/delay\";\r\n// import bus_icon_url from \"../../../assets/Bus.png\"; // rename to _url\r\n// import location_icon_url from \"../../../assets/Location.png\";\r\n// import markerIcon2x from \"leaflet/dist/images/marker-icon-2x.png\";\r\n// import markerIcon from \"leaflet/dist/images/marker-icon.png\";\r\n// import markerShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n\r\n// delete (L.Icon.Default.prototype as any)._getIconUrl;\r\n\r\n// L.Icon.Default.mergeOptions({\r\n//   iconUrl: markerIcon,\r\n//   iconRetinaUrl: markerIcon2x,\r\n//   shadowUrl: markerShadow,\r\n// });\r\n\r\n// interface RouteMapProps {\r\n//   stops: Stop[];\r\n//   busLocations?: LiveBusLocation[];\r\n//   pathCoordinates?: [number, number][];\r\n// }\r\n\r\n// // Create the custom icons\r\n// const busIcon = L.icon({\r\n//   iconUrl: bus_icon_url,\r\n//   iconRetinaUrl: bus_icon_url,\r\n//   iconSize: [30, 30],\r\n//   iconAnchor: [15, 30],\r\n//   popupAnchor: [0, -30],\r\n// });\r\n\r\n// const locationIcon = L.icon({\r\n//   iconUrl: location_icon_url,\r\n//   iconRetinaUrl: location_icon_url,\r\n//   iconSize: [30, 30],\r\n//   iconAnchor: [15, 30],\r\n//   popupAnchor: [0, -30],\r\n// });\r\n\r\n// const RouteMap: React.FC<RouteMapProps> = ({\r\n//   stops,\r\n//   busLocations = [],\r\n//   pathCoordinates,\r\n// }) => {\r\n//   const center: [number, number] = stops.length\r\n//     ? [stops[0].latitude, stops[0].longitude]\r\n//     : [33.7756, -84.3963];\r\n\r\n//   return (\r\n//     <MapContainer\r\n//       center={center}\r\n//       zoom={15}\r\n//       style={{ height: \"500px\", width: \"100%\" }}\r\n//     >\r\n//       <TileLayer\r\n//         attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a>'\r\n//         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//       />\r\n//       {pathCoordinates && (\r\n//         <Polyline positions={pathCoordinates} color=\"#b3a369\" />\r\n//       )}\r\n//       {stops.map((stop) => (\r\n//         <Marker\r\n//           key={stop.id}\r\n//           position={[stop.latitude, stop.longitude]}\r\n//           icon={locationIcon}\r\n//         >\r\n//           <Popup>{stop.name}</Popup>\r\n//         </Marker>\r\n//       ))}\r\n//       {busLocations.map((bus) => (\r\n//         <Marker\r\n//           key={bus.busId}\r\n//           position={[bus.latitude, bus.longitude]}\r\n//           icon={busIcon}\r\n//         >\r\n//           <Popup>\r\n//             Bus {bus.busId} on Route {bus.routeId}\r\n//           </Popup>\r\n//         </Marker>\r\n//       ))}\r\n//     </MapContainer>\r\n//   );\r\n// };\r\n\r\n// export default RouteMap;\r\n\r\nimport React from \"react\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Polyline,\r\n  CircleMarker,\r\n  Marker,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { Stop } from \"@/types/stop\";\r\nimport { LiveBusLocation } from \"@/types/delay\";\r\nimport bus_icon_url from \"../../../assets/Bus.png\";\r\n\r\n// Custom icon for buses\r\nconst busIcon = L.icon({\r\n  iconUrl: bus_icon_url,\r\n  iconRetinaUrl: bus_icon_url,\r\n  iconSize: [30, 30],\r\n  iconAnchor: [15, 30],\r\n  popupAnchor: [0, -30],\r\n});\r\n\r\ninterface RouteMapProps {\r\n  stops: Stop[];\r\n  busLocations?: LiveBusLocation[];\r\n  pathCoordinates?: [number, number][];\r\n}\r\n\r\nconst RouteMap: React.FC<RouteMapProps> = ({\r\n  stops,\r\n  busLocations = [],\r\n  pathCoordinates,\r\n}) => {\r\n  const center: [number, number] = stops.length\r\n    ? [stops[0].latitude, stops[0].longitude]\r\n    : [33.7756, -84.3963];\r\n\r\n  // Change color for CircleMarker based on route\r\n  const stopColor = (stopId: string) => {\r\n    return stopId === \"Gold Route\" ? \"#b3a369\" : \"#FF0000\";\r\n  };\r\n\r\n  return (\r\n    <MapContainer\r\n      center={center}\r\n      zoom={15}\r\n      style={{ height: \"500px\", width: \"100%\" }}\r\n      scrollWheelZoom={true}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a>'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {pathCoordinates && (\r\n        <Polyline positions={pathCoordinates} color=\"#b3a369\" />\r\n      )}\r\n\r\n      {stops.map((stop) => (\r\n        <CircleMarker\r\n          key={stop.id}\r\n          center={[stop.latitude, stop.longitude]}\r\n          radius={10}\r\n          fillColor=\"#fff\"\r\n          color={stopColor(stop.id)}\r\n          fillOpacity={0.8}\r\n          stroke={true}\r\n          weight={3}\r\n        >\r\n          <Popup>{stop.name}</Popup>\r\n        </CircleMarker>\r\n      ))}\r\n\r\n      {busLocations.map((bus) => (\r\n        <Marker\r\n          key={bus.busId}\r\n          position={[bus.latitude, bus.longitude]}\r\n          icon={busIcon}\r\n        >\r\n          <Popup>\r\n            Bus {bus.busId} on Route {bus.routeId}\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default RouteMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}